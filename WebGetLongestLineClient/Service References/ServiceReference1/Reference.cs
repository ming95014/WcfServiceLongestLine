//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebGetLongestLineClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.ITransferService")]
    public interface ITransferService {
        
        // CODEGEN: Generating message contract since the wrapper name (RemoteFileInfo) of message RemoteFileInfo does not match the default value (UploadFileAndReturnLongestLine)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/UploadFileAndReturnLongestLine", ReplyAction="http://tempuri.org/ITransferService/UploadFileAndReturnLongestLineResponse")]
        WebGetLongestLineClient.ServiceReference1.ReturnType UploadFileAndReturnLongestLine(WebGetLongestLineClient.ServiceReference1.RemoteFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/UploadFileAndReturnLongestLine", ReplyAction="http://tempuri.org/ITransferService/UploadFileAndReturnLongestLineResponse")]
        System.Threading.Tasks.Task<WebGetLongestLineClient.ServiceReference1.ReturnType> UploadFileAndReturnLongestLineAsync(WebGetLongestLineClient.ServiceReference1.RemoteFileInfo request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public RemoteFileInfo() {
        }
        
        public RemoteFileInfo(string FileName, long Length, System.IO.Stream FileByteStream) {
            this.FileName = FileName;
            this.Length = Length;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReturnType", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReturnType {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string ErrorMessage;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string LongestLine;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public bool Status;
        
        public ReturnType() {
        }
        
        public ReturnType(string ErrorMessage, string LongestLine, bool Status) {
            this.ErrorMessage = ErrorMessage;
            this.LongestLine = LongestLine;
            this.Status = Status;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransferServiceChannel : WebGetLongestLineClient.ServiceReference1.ITransferService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransferServiceClient : System.ServiceModel.ClientBase<WebGetLongestLineClient.ServiceReference1.ITransferService>, WebGetLongestLineClient.ServiceReference1.ITransferService {
        
        public TransferServiceClient() {
        }
        
        public TransferServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransferServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransferServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransferServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebGetLongestLineClient.ServiceReference1.ReturnType WebGetLongestLineClient.ServiceReference1.ITransferService.UploadFileAndReturnLongestLine(WebGetLongestLineClient.ServiceReference1.RemoteFileInfo request) {
            return base.Channel.UploadFileAndReturnLongestLine(request);
        }
        
        public string UploadFileAndReturnLongestLine(string FileName, long Length, System.IO.Stream FileByteStream, out string LongestLine, out bool Status) {
            WebGetLongestLineClient.ServiceReference1.RemoteFileInfo inValue = new WebGetLongestLineClient.ServiceReference1.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            WebGetLongestLineClient.ServiceReference1.ReturnType retVal = ((WebGetLongestLineClient.ServiceReference1.ITransferService)(this)).UploadFileAndReturnLongestLine(inValue);
            LongestLine = retVal.LongestLine;
            Status = retVal.Status;
            return retVal.ErrorMessage;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebGetLongestLineClient.ServiceReference1.ReturnType> WebGetLongestLineClient.ServiceReference1.ITransferService.UploadFileAndReturnLongestLineAsync(WebGetLongestLineClient.ServiceReference1.RemoteFileInfo request) {
            return base.Channel.UploadFileAndReturnLongestLineAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebGetLongestLineClient.ServiceReference1.ReturnType> UploadFileAndReturnLongestLineAsync(string FileName, long Length, System.IO.Stream FileByteStream) {
            WebGetLongestLineClient.ServiceReference1.RemoteFileInfo inValue = new WebGetLongestLineClient.ServiceReference1.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            return ((WebGetLongestLineClient.ServiceReference1.ITransferService)(this)).UploadFileAndReturnLongestLineAsync(inValue);
        }
    }
}
